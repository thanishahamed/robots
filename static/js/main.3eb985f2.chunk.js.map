{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","getUsers","map","user","i","username","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","isErrorFound","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","toUpperCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCsBCQ,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAExB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAM,SAASC,IAAG,+BAA4BH,EAA5B,cACvB,gCACI,6BAAKF,IACL,4BAAIC,WCIDK,EAxBF,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAKTC,EAAWD,EAAOE,KAAI,SAACC,EAAKC,GAC9B,OACA,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAQO,EAAOI,GAAGX,KAClBY,SAAYL,EAAOI,GAAGC,SACtBX,MAASM,EAAOI,GAAGV,OAJdU,MASb,OACI,gCACKH,EADL,QCPOK,EAZG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKX,UAAU,MAAf,SACI,uBAAOY,KAAK,SACZC,YAAY,eACZb,UAAU,oCACVc,SAAYH,OCGTI,EAVA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,sBAAuBC,OAAO,SAAvE,SACEJ,EAAMK,YCqBKC,E,kDAtBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,cAAe,GAHC,E,8DAOAC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,cAAa,M,+BAI5B,OAAGG,KAAKJ,MAAMC,aACL,wDAEAG,KAAKX,MAAMK,a,GAhBMQ,aCiEbC,E,kDArDd,aAAc,IAAD,8BACZ,gBAQDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAcD,EAAME,OAAOC,SAR1C,EAAKZ,MAAQ,CACZnB,OAAO,GACP6B,YAAY,IAJD,E,gEAaO,IAAD,OAClBG,MAAM,8CAA8C9C,MAAK,SAAA+C,GACxD,OAAQA,EAASC,UACfhD,MAAK,SAAAiD,GACP,EAAKX,SAAS,CAACxB,OAAOmC,S,+BAMf,IAAD,OACDC,EAAiBb,KAAKJ,MAAMnB,OAAOqC,QAAO,SAACC,GAChD,OACCA,EAAM7C,KAAK8C,cAAcC,SAAS,EAAKrB,MAAMU,YAAYU,kBAI3D,OAAgC,IAA7BhB,KAAKJ,MAAMnB,OAAOyC,OAEZ,4CAKR,sBAAK7C,UAAU,KAAf,UACU,6BAAK,gBAAgB8C,gBACrB,cAAC,EAAD,CAAWnC,aAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU3B,OAAQoC,e,GA5CfX,aCNlBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.3eb985f2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n// import React,{Component} from 'react';\r\n\r\n\r\n// class Card extends Component{\r\n//     render(){\r\n//         return (\r\n//             <div>\r\n//                 <img alt = \"robots\" src = \"\" />\r\n//                 <h2>Thanish Ahamed</h2>\r\n//                 <p>muktharthanish@gmail.com</p>\r\n//             </div>\r\n//         );\r\n//     }\r\n// } \r\n\r\n\r\nconst Card = ({name, email, id}) =>{\r\n    // const {name, email, id} = props; //this is one way with passing the parameter \"props\"\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt = \"robots\" src = {`https://robohash.org/${id}?100x100`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) =>{\r\n    \r\n    // if(true){\r\n    //     return (new Error());\r\n    // }\r\n    const getUsers = robots.map((user,i)=>{\r\n        return (\r\n        <Card \r\n            key={i}\r\n            id={robots[i].id} \r\n            name = {robots[i].name} \r\n            username = {robots[i].username} \r\n            email = {robots[i].email} \r\n        />\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            {getUsers};\r\n        </div>\r\n        );\r\n    }\r\n\r\n    export default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return(\r\n        <div className='pa2'>\r\n            <input type=\"search\" \r\n            placeholder=\"Seach Robots\" \r\n            className=\"pa3 ba b--green bg-lighttest-blue\"\r\n            onChange = {searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn (\r\n\t\t<div style={{overflow: 'scroll', border: '1px solid lightgrey', height:'800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisErrorFound : false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error,info){\r\n\t\tthis.setState({isErrorFound:true});\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.isErrorFound){\r\n\t\t\treturn (<h1>Oops There is an error</h1>);\r\n\t\t}else{\r\n\t\t\treturn (this.props.children);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\n\r\n\r\n// const state = {\r\n// \trobots: 'robots',\r\n// \tsearcfield: ''\r\n// }\r\n\r\n\r\nclass App extends Component{\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trobots:[],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t\t// console.log('constructor')\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield : event.target.value});\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n\t\t\treturn (response.json());\r\n\t\t}).then(users=>{\r\n\t\t\tthis.setState({robots:users});\r\n\t\t});\r\n\t\t// console.log('componentDidMount')\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst filteredRobots = this.state.robots.filter((robot)=>{\r\n\t\t\treturn(\r\n\t\t\t\trobot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tif(this.state.robots.length === 0){\r\n\t\t\t// console.log('render');\r\n\t\t\treturn (<h1>Loading...</h1>);\r\n\t\t\t\t\r\n\t\t}else{\r\n\t\t\t// console.log('render');\r\n\t\t\treturn(\r\n\t\t\t<div className='tc'>\r\n\t            <h1>{'Robot Friends'.toUpperCase()}</h1>\r\n\t            <SearchBox searchChange = {this.onSearchChange}/>\r\n\t            <Scroll>\r\n\t            \t<ErrorBoundary>\r\n\t            \t\t<CardList robots={filteredRobots}/>\r\n\t            \t</ErrorBoundary>\r\n\t            </Scroll>\r\n        \t</div>\r\n\t\t);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}